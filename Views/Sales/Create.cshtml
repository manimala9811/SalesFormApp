@model SalesFormViewModel
@{
    ViewData["Title"] = "Sales List";
}

<div class="container mt-4">
    <div class="card shadow p-4">
        <form asp-action="Create" method="post">

            <div class="row align-items-center mb-3">
                <div class="col-md-4">
                    <h3>Sales List</h3>
                     <p style="font-size: 14px; font-weight: normal; margin-top: 4px;">Country & City</p>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Date</label>
                    <input type="date" asp-for="SalesDetail.Date" class="form-control" required />
                </div>
                <div class="col-md-4">
                    <label class="form-label">User</label>
                    <select asp-for="SalesDetail.UserId" class="form-select">
                        <option value="">Select User</option>
                        @foreach (var user in Model.Users)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-bordered align-middle" id="salesTable">
                    <thead class="table-light">
                        <tr>
                            <th>Country</th>
                            <th>City</th>
                            <th>Product</th>
                            <th>Qty Sold</th>
                            <th>Amount</th>
                            <th style="text-align: center;">
                                <button type="button" class="btn btn-success btn-sm" onclick="addRow()">
                                    +
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="salesBody">
                        <!-- Dynamic rows -->
                    </tbody>
                </table>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary btn-lg">Submit</button>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    <script>
        const countries = @Html.Raw(Json.Serialize(Model.Countries));
        const cities = @Html.Raw(Json.Serialize(Model.Cities));
        const products = @Html.Raw(Json.Serialize(Model.Products));

        function addRow() {
            const index = document.querySelectorAll("#salesBody tr").length;
            const row = `
                <tr>
                    <td>
                        <select name="SalesDetail.SalesItems[${index}].CountryId" class="form-select" onchange="filterCities(this, ${index})" required>
                            <option value="">Select Country</option>
                            ${countries.map(c => `<option value="${c.id}">${c.name}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <select name="SalesDetail.SalesItems[${index}].CityId" class="form-select" id="city-${index}" required>
                            <option value="">Select City</option>
                        </select>
                    </td>
                    <td>
                        <select name="SalesDetail.SalesItems[${index}].ProductId" class="form-select" required>
                            <option value="">Select Product</option>
                            ${products.map(p => `<option value="${p.id}">${p.name}</option>`).join('')}
                        </select>
                    </td>
                    <td>
                        <input type="number" name="SalesDetail.SalesItems[${index}].QtySold" class="form-control" min="1" required />
                    </td>
                    <td>
                        <input type="number" name="SalesDetail.SalesItems[${index}].Amount" class="form-control" step="0.01" min="0" required />
                    </td>
                    <td class="text-center">
                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteRow(this)">
                            ðŸ—‘
                        </button>
                    </td>
                </tr>
            `;
            document.getElementById("salesBody").insertAdjacentHTML('beforeend', row);
        }

        function deleteRow(button) {
            button.closest('tr').remove();
        }

        function filterCities(countrySelect, index) {
            const selectedCountryId = parseInt(countrySelect.value);
            const filtered = cities.filter(c => c.countryId === selectedCountryId);

            const cityDropdown = document.getElementById(`city-${index}`);
            cityDropdown.innerHTML = '<option value="">Select City</option>';
            filtered.forEach(city => {
                const option = document.createElement('option');
                option.value = city.id;
                option.textContent = city.name;
                cityDropdown.appendChild(option);
            });
        }

        document.addEventListener("DOMContentLoaded", () => addRow());
    </script>
}